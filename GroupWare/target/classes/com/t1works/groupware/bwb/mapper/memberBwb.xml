<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberBwb">
   
   <select id="selectMember" parameterType="HashMap" resultType="com.t1works.groupware.bwb.model.MemberBwbVO">
      select *
      from tbl_employee
      where employeeid = #{employeeid} and passwd = #{passwd}
   </select>
	
   <select id="selectJubun" parameterType="String" resultType="String">
   		select jubun
   		from tbl_employee
        where employeeid = #{employeeid}
   </select>
	
   <insert id="insertlogin_history">
	  insert into login_history(loginno,fk_employeeid,loginip)
	  values(seq_login_history_loginno.nextval,#{employeeid},#{loginip})
   </insert>
   
   <!-- 출퇴근기록 테이블에 insert하기(출근시간) -->
   <insert id="insertIntime" parameterType="HashMap"> 
	  insert into tbl_inout(gooutdate,fk_employeeid,intime,lateno)
	  values(to_date(#{gooutdate}),#{fk_employeeid},sysdate,0)			
   </insert>
   
   <!-- 출퇴근기록 테이블에 select하기(출근시간) -->
   <select id="selectIntime" resultType="String" parameterType="HashMap">
   	  select to_char(intime,'hh24:mi:ss') from tbl_inout
   	  where gooutdate=#{gooutdate} and fk_employeeid=#{fk_employeeid}
   </select>
   
   <!-- 출근시간 지각여부 확인하기  -->
   <select id="selectlateno" parameterType="String" resultType="String">
   	  select sign(to_date(#{intime},'hh24:mi:ss')- to_date('09:30:00','hh24:mi:ss')) as late
	  from dual
   </select>
   
   <!-- 출근시간 지각여부 확인 후 지각 시  update하기  -->
   <update id="updateLateno" parameterType="HashMap">
	  update tbl_inout set lateno = '1'
	  where gooutdate=#{gooutdate} and fk_employeeid=#{fk_employeeid} 
   </update>
   
   <!-- 출퇴근기록 테이블에 update하기(퇴근시간) -->
   <update id="updateOuttime" parameterType="HashMap">
	  update tbl_inout set outtime = sysdate
	  where gooutdate=#{gooutdate} and fk_employeeid=#{fk_employeeid} 
   </update>
   
   <!-- 출퇴근기록 테이블에 select하기(퇴근시간) -->
   <select id="selectOuttime" resultType="String" parameterType="HashMap">
   	  select to_char(outtime,'hh24:mi:ss') from tbl_inout
   	  where gooutdate=#{gooutdate} and fk_employeeid=#{fk_employeeid}
   </select>
   
   <!-- 모든 직위가져오기 -->
   <select id="selectPositionList" resultType="com.t1works.groupware.bwb.model.MemberBwbVO">
   		select pname, pcode as fk_pcode from tbl_position
   		order by pcode asc
   </select>
   
   <!-- 소속에 따른 직무 가져오기 -->
   <select id="selectDuty" parameterType="String" resultType="String">
   		select duty from tbl_department
   		where dname = #{dname}
   </select>
   
   
    <resultMap type="HashMap" id="PDMap"> 
		<result property="fk_pcode" column="pcode" javaType="String" /> 
		<result property="fk_dcode" column="dcode" javaType="String" />
	</resultMap>
   
   <!-- name과 dname을 통해 pcode 가져오기. -->  
   <select id="selectPDcode" parameterType="HashMap" resultMap="PDMap">
	   	select pcode, dcode, offcnt
		from tbl_department
		cross join tbl_position
		where dname = #{dname} and pname= #{pname}
   </select>
   
   <!-- 회원정보 update하기 -->
   <update id="updateOneInfo" parameterType="com.t1works.groupware.bwb.model.MemberBwbVO">
   		update tbl_employee set fk_dcode = #{fk_dcode}, fk_pcode = #{fk_pcode}, name=#{name}, email=#{email}, mobile=#{mobile}, cmobile=#{cmobile}
   		where employeeid = #{employeeid}
   </update>
   
   <!-- 직위에 따른 휴가값 가져오기 -->
   <select id="selectOffCnt" resultType="String">
   		select offcnt from tbl_position
   		where pcode = #{pcode}
   </select>
   
   <!-- 직원정보 등록하기 ==> 추후 코드 변경 예정 -->
   <insert id="registerOne" parameterType="com.t1works.groupware.bwb.model.MemberBwbVO">
   		insert into tbl_employee(employeeid,fk_dcode,fk_pcode,name,passwd,email,mobile,cmobile,jubun,managerid)
   		values(#{employeeid},#{fk_dcode},#{fk_pcode},#{name},#{passwd},#{email},#{mobile},#{cmobile},#{jubun},#{managerid})
   </insert>
   
   <!-- 등록한 직원의 fk_dcode를 통해 managerid 알아오기 -->
   <select id="selectMangerid" parameterType="String" resultType="String">
   		select managerid from tbl_department
   		where dcode = #{dcode}
   </select>
   
   <!-- 부서명가져오기 -->
   <select id="selectdname" parameterType="String" resultType="String">
   		select dname from tbl_department
   		where dcode = #{dcode}
   </select>
   
   <!-- 직위명 가져오기 -->
   <select id="selectpname" parameterType="String" resultType="String">
   		select pname from tbl_position
   		where pcode = #{pcode}
   </select>
   
   <!-- 비밀번호 변경하기 -->
   <update id="updatePasswd" parameterType="HashMap">
   		update tbl_employee set passwd = #{passwd}
   		where employeeid = #{employeeid}
   </update>
   
   
   <!-- 부장을 제외한 사원ID와 비밀번호 가져오기 -->
   <select id="selectMemberList" parameterType="String" resultType="com.t1works.groupware.bwb.model.MemberBwbVO">
   		select employeeid,name
		from tbl_employee
		where fk_dcode = #{dcode} and fk_pcode != '3'
   </select>
   
   <select id="selectDepartmentList" resultType="com.t1works.groupware.bwb.model.MemberBwbVO">
   		select dname,dcode as fk_dcode
		from tbl_department
		where dcode in (1,2,3)
   </select>
   
</mapper>