<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="todoHsy">
	
	<!-- 특정유저의 특정업무상태에 해당하는 총 페이지 수 알아오기 -->
	<select id="selectTotalPage" parameterType="HashMap" resultType="Integer">
		select ceil(count(*)/#{sizePerPage}) as cnt 
		from tbl_todo where fk_employeeid=#{employeeid} 
		<if test='requiredState=="0"'>
			and startDate is null  <!-- 신규등록업무  -->
		</if>
		<if test='requiredState=="1"'>
			and startDate is not null and endDate is null <!-- 진행중업무  -->
		</if>
		<if test='requiredState=="2"'>
			and startDate is not null and endDate is not null <!-- 진행완료업무  -->
			<if test='periodOption=="week"'> <!-- 일주일 이내 진행완료업무  -->
				and endDate >= to_date(to_char(sysdate-7,'yyyy/mm/dd'),'yyyy/mm/dd')
			</if>
			<if test='periodOption=="month"'> <!-- 한달 이내 진행완료업무  -->
				and endDate >= to_date(to_char(add_months(sysdate,-1),'yyyy/mm/dd'),'yyyy/mm/dd')
			</if>
			<if test='periodOption=="3months"'> <!-- 세달 이내 진행완료업무  -->
				and endDate >= to_date(to_char(add_months(sysdate,-3),'yyyy/mm/dd'),'yyyy/mm/dd')
			</if>
		</if>
	</select>
	
	<!-- 업무관리페이지에서 보여줄 정보 (페이징처리)  -->
	<select id="employeeTodoList" parameterType="HashMap" resultType="com.t1works.groupware.hsy.model.TodoHsyVO">
		
		select rno, fk_pNo, pName, name, assignDate, startDate, dueDate, endDate, hurryno, nowNo, maxNo, miniNo, ingDetail 
		from
		(
			select rownum as rno, fk_pNo, pName, name, assignDate, startDate, dueDate, endDate, hurryno, nowNo, maxNo, miniNo, ingDetail  
			from
			(
				select fk_pNo, pName, name, to_char(assignDate,'yyyy-mm-dd') as assignDate, to_char(T.startDate,'yyyy-mm-dd') as startDate, 
				       to_char(dueDate,'yyyy-mm-dd') as dueDate, to_char(T.endDate,'yyyy-mm-dd') as endDate,
				       hurryno, nowNo, maxNo, miniNo, ingDetail
				from tbl_todo T
				join tbl_product on fk_pno=pno
				join tbl_employee on fk_managerid=employeeid
				where fk_employeeid=#{employeeid} 
				<if test='requiredState=="0"'> <!-- 신규등록업무  -->
					and T.startDate is null
					order by hurryno desc, dueDate  
				</if>
				<if test='requiredState=="1"'> <!-- 진행중업무  -->
					and T.startDate is not null and T.endDate is null
					order by hurryno desc, dueDate 
				</if>
				<if test='requiredState=="2"'> <!-- 진행완료업무  -->
					and T.startDate is not null and T.endDate is not null
					<if test='periodOption=="week"'> <!-- 일주일 이내 진행완료업무  -->
						and T.endDate >= to_date(to_char(sysdate-7,'yyyy/mm/dd'),'yyyy/mm/dd')
					</if>
					<if test='periodOption=="month"'> <!-- 한달 이내 진행완료업무  -->
						and T.endDate >= to_date(to_char(add_months(sysdate,-1),'yyyy/mm/dd'),'yyyy/mm/dd')
					</if>
					<if test='periodOption=="3months"'> <!-- 세달 이내 진행완료업무  -->
						and T.endDate >= to_date(to_char(add_months(sysdate,-3),'yyyy/mm/dd'),'yyyy/mm/dd')
					</if>
					order by T.endDate desc 
				</if>
			) V
		) V1
		where rno between #{start} and #{end}
		order by rno
	</select>

	<!-- 신규등록업무, 진행중업무, 진행완료업무 총 건수 가져오기 resultMap 정의  -->
	<resultMap type="HashMap" id="cntMap">
		<result property="newTodoCnt" column="newTodoCnt" javaType="String"/>
		<result property="ingTodoCnt" column="ingTodoCnt" javaType="String"/>
		<result property="doneTodoCnt" column="doneTodoCnt" javaType="String"/>
	</resultMap>

	<!-- 신규등록업무, 진행중업무, 진행완료업무 총 건수 가져오기  -->
	<select id="selectCntTodoByrequiredState" parameterType="String" resultMap="cntMap">
		select (select to_char(count(*)) from tbl_todo where fk_employeeid=#{employeeid} and startDate is null) as newTodoCnt,
			   (select to_char(count(*)) from tbl_todo where fk_employeeid=#{employeeid} and startDate is not null and endDate is null) as ingTodoCnt,
			   (select to_char(count(*)) from tbl_todo where fk_employeeid=#{employeeid} and startDate is not null and endDate is not null) as doneTodoCnt
		from dual
	</select>
	
	<!-- 신규등록업무에서 진행중업무로 업데이트 -->
	<update id="goWorkStart" parameterType="String">
		update tbl_todo set startDate=sysdate, ingDetail='0'
		where fk_pNo= #{fk_pNo}
	</update>
	
	<!-- 지연상태인 모든 업무들 지연일자 update 해주기 -->
	<update id="updateDelayDay">
		update tbl_todo set ingDetail= to_date(to_char(sysdate,'yyyy/mm/dd'),'yyyy/mm/dd')-to_date(to_char(duedate,'yyyy/mm/dd'),'yyyy/mm/dd')
		where fk_pno in ( select fk_pNo
						  from tbl_todo
						  where to_date(to_char(sysdate,'yyyy/mm/dd'),'yyyy/mm/dd')-to_date(to_char(duedate,'yyyy/mm/dd'),'yyyy/mm/dd') > 0 )
		and (startDate is not null) and (endDate is null) and (assignDate is not null) 
	</update>
	
	<!-- 진행중인 업무 상태변경(진행중 또는 보류)에 따라 update하기 -->
	<update id="updateIngDetail" parameterType="com.t1works.groupware.hsy.model.TodoHsyVO">
		update tbl_todo set ingDetail=#{ingDetail}
		where fk_pNo=#{fk_pNo}
	</update>
	
	<!-- 신규등록업무에서 진행중업무로 업데이트 -->
	<update id="goWorkDone" parameterType="String">
		update tbl_todo set endDate=sysdate, ingDetail=null
		where fk_pNo= #{fk_pNo}
	</update>
	
	
	<!-- 기간별로 완료한 업무 총건수 나눠서 표시하기 위한 resultMap 정의  -->
	<resultMap type="HashMap" id="donePeriodMap">
		<result property="weekCnt" column="weekCnt" javaType="String"/>
		<result property="monthCnt" column="monthCnt" javaType="String"/>
		<result property="threeMonthsCnt" column="threeMonthsCnt" javaType="String"/>
	</resultMap>
	
	<!-- 기간별로 완료한 업무 총건수 나눠서 표시 -->
	<select id="selectCntTodoByPeriod" parameterType="String" resultMap="donePeriodMap" >
		select (select to_char(count(*)) from tbl_todo where fk_employeeid=#{employeeid} and endDate >= to_date(to_char(sysdate-7,'yyyy/mm/dd'),'yyyy/mm/dd')) as weekCnt,
       		   (select to_char(count(*)) from tbl_todo where fk_employeeid=#{employeeid} and endDate >= to_date(to_char(add_months(sysdate,-1),'yyyy/mm/dd'),'yyyy/mm/dd')) as monthCnt,
      	       (select to_char(count(*)) from tbl_todo where fk_employeeid=#{employeeid} and endDate >= to_date(to_char(add_months(sysdate,-3),'yyyy/mm/dd'),'yyyy/mm/dd')) as threeMonthsCnt
	    from dual
	</select>
	
	
	<!-- 선택 날짜로 부터 6개월 이전까지의 날짜리스트 만들기 위한 resultMap 정의 -->
	<resultMap type="HashMap" id="sixDateMap">
		<result property="prev1" column="prev1" javaType="String"/>
		<result property="prev2" column="prev2" javaType="String"/>
		<result property="prev3" column="prev3" javaType="String"/>
		<result property="prev4" column="prev4" javaType="String"/>
		<result property="prev5" column="prev5" javaType="String"/>
	</resultMap>
	
	<!-- 선택 날짜로 부터 6개월 이전까지의 날짜리스트 만들기 -->
	<select id="getDateBeforeSix" parameterType="String" resultMap="sixDateMap">
		select (select to_char(add_months(to_date(#{selectedDate},'yyyy-mm'),-1),'yyyy-mm') from dual) as prev1
			 , (select to_char(add_months(to_date(#{selectedDate},'yyyy-mm'),-2),'yyyy-mm') from dual) as prev2
			 , (select to_char(add_months(to_date(#{selectedDate},'yyyy-mm'),-3),'yyyy-mm') from dual) as prev3
			 , (select to_char(add_months(to_date(#{selectedDate},'yyyy-mm'),-4),'yyyy-mm') from dual) as prev4
			 , (select to_char(add_months(to_date(#{selectedDate},'yyyy-mm'),-5),'yyyy-mm') from dual) as prev5
		from dual
	</select>
	
	<!-- 해당년월의 처리업무에 해당하는 fk_pno 가져오기 -->
	<select id="getFk_pnoListByDate" parameterType="HashMap" resultType="String">
		select fk_pno from tbl_todo 
		where fk_employeeid=#{employeeid} and to_char(enddate,'yyyy-mm')=#{specificDate}
	</select>
	
	
	<!-- 해당년월의 처리 업무 건 수 와 고객 수 가져오기 위한 resultMap 정의 -->
	<resultMap type="HashMap" id="PerfAndClientCntMap">
		<result property="perfNumber" column="perfNumber" javaType="String"/>
		<result property="clienNumber" column="clienNumber" javaType="String"/>
		<result property="specificDate" column="specificDate" javaType="String"/>
	</resultMap>

	<!-- 해당년월의 처리 업무 건 수 와 고객 수 가져오기  -->
	<select id="getPerfAndClientCnt" parameterType="HashMap" resultMap="PerfAndClientCntMap">
		select (select to_char(count(*)) from tbl_todo where fk_employeeid=#{employeeid} and to_char(enddate,'yyyy-mm')= #{specificDate}) as perfNumber
			 , (select to_char(nvl(sum(cnumber),0)) from tbl_client where fk_pno in (${fk_pnoForIn})) as clienNumber
			 , (select case when to_date(#{hiredate},'yyyy-mm') > to_date(#{specificDate},'yyyy-mm') then '-' else #{specificDate} end from dual) as specificDate
		from dual
	</select>
	
	
</mapper>