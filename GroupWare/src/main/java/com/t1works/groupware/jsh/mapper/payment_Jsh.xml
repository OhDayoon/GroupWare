<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="payment_Jsh">


<!--====  공통       ==============================================================================-->

<!-- 하나의 문서보기에서 결재로그 보여주기 -->
  	<select id="oneLogList" parameterType="HashMap"  resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
		select nvl(dname, ' ') as dname, name, pname, to_char(logdate, 'yyyy-mm-dd') as logdate, logstatus, employeeid, pcode
		from tbl_alog a join tbl_employee e
		on a.fk_employeeid = e.employeeid
		left join tbl_department d
		on e.fk_dcode = d.dcode
		join tbl_position p
		on e.fk_pcode = p.pcode
		where fk_ano = #{ano}
		order by logno
	</select>


<!--  하나의 문서보기 수신자 정보 받아오기 -->
  <select id="receiver" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
		 select name, employeeid  ,pname ,dname
		 from tbl_employee e left join tbl_position p
		 on e.fk_pcode = p. pcode
		 left join tbl_department d
		 on e.fk_dcode = d.dcode
		where employeeid=(select managerid from tbl_employee where employeeid= #{employeeid}) 
	</select>


<!-- 글쓰기에서 수신자 정보 select해오기 -->
	<select id="mWriteJsh" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
		 select name, employeeid  ,pname
		 from tbl_employee e left join tbl_position p
		 on e.fk_pcode = p. pcode
		 where employeeid=(select managerid from tbl_employee where employeeid= #{userid}) 
	</select>







<!--====  공통 끝       ==============================================================================-->

<select id="generalPayment_List"  resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			select  row_number() over(order by a.ano desc ) as RNO,
			       		 a.ano ,ncatname, atitle, name ,dname,asdate ,apaper   
			from tbl_approval a left join tbl_norapproval n
			on a.ano = n.fk_ano
			left join 
			(select employeeid ,name , fk_dcode
			 from tbl_employee 
			)e
			on a.fk_employeeid = e.employeeid
			left join 
			(select dcode, dname
			from tbl_department
			)d
			on e.fk_dcode = d.dcode
			where anocode= 1 and apaper =0
	</select>

  <!-- === 페이징 처리를 안한 검색어가 있는 전체 글목록 보여주기 === -->
	<select id="electronListSearch"  parameterType="HashMap"  resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			select  a.ano ,ncatname, atitle, name ,dname,asdate ,apaper 
			from tbl_approval a left join tbl_norapproval n
			on a.ano = n.fk_ano
			left join 
			(select employeeid ,name , fk_dcode
			 from tbl_employee 
			)e
			on a.fk_employeeid = e.employeeid
			left join 
			(select dcode, dname
			from tbl_department
			)d
			on e.fk_dcode = d.dcode
			where anocode= 1 and apaper =0
				<if test=' searchCategory == "" and searchType != "" and searchWord != "" '>
			         and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			     </if>
			      <if test=' searchCategory != ""  and searchType == ""   and searchWord == "" '>
			     	 	and ncat= #{searchCategory}
			     </if>
			      <if test=' searchCategory != ""  and searchType != ""   and searchWord == "" '>
			     	 	and ncat= #{searchCategory}
			     </if>
			     <if test=' searchCategory != ""  and searchType != ""    and searchWord != "" '>
				     	 and ncat= #{searchCategory}
				         and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				  </if>
		      order by  a.ano desc
	</select>

  <!-- === 검색어 입력시 자동글 완성하기  === -->
     <select id="wordSearchShow" parameterType="HashMap" resultType="String">
			<choose>
				<when test="searchType eq 'name'"> <!-- if -->
		            select distinct ${searchType}
		        </when>
		         <otherwise>   <!-- else -->
            		select ${searchType}
         		</otherwise>
			</choose>
			from tbl_approval a left join tbl_norapproval n
					  on a.ano = n.fk_ano
					  left join 
				  	 (select employeeid ,name , fk_dcode
					  from tbl_employee 
					 )e
					 on a.fk_employeeid = e.employeeid
				     where anocode= 1 and apaper = 0
			 			 and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
		    <if test="searchType neq 'name'">
		     order by  a.ano desc
		    </if>
	</select>


 <!-- === 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
		<select id="getTotalCount" parameterType="HashMap" resultType="int">
			select  count(*) 
			from tbl_approval  a left join tbl_employee e
			on a.fk_employeeid = e.employeeid
			left join tbl_norapproval n
			on a.ano = n.fk_ano
			where anocode= '1' and apaper = 0
				<if test=' searchCategory == "" and searchType != "" and searchWord != "" '>
			         and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			     </if>
			      <if test=' searchCategory != ""  and searchType == ""   and searchWord == "" '>
			     	 	and ncat= #{searchCategory}
			     </if>
			      <if test=' searchCategory != ""  and searchType != ""   and searchWord == "" '>
			     	 	and ncat= #{searchCategory}
			     </if>
			     <if test=' searchCategory != ""  and searchType != ""    and searchWord != "" '>
				     	 and ncat= #{searchCategory}
				         and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				  </if>
		</select>

		<!--  //페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한 것) -->
		<select id="electronListSearchWithPaging" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			select rno, ano ,ncatname, atitle, name ,dname,to_char(asdate,'yyyy-mm-dd') as asdate, apaper, employeeid 
				  , fileName, orgFilename, fileSize   
			from
			(
			select row_number() over(order by a.ano desc) AS rno  
			      ,a.ano ,ncatname, atitle, name ,dname,asdate ,apaper  , e.employeeid 
			       , fileName, orgFilename, fileSize 
			from tbl_approval a left join tbl_norapproval n
			on a.ano = n.fk_ano
			left join 
			(select employeeid ,name , fk_dcode
			from tbl_employee 
			)e
			on a.fk_employeeid = e.employeeid
			left join 
			(select dcode, dname
			from tbl_department
			)d
			on e.fk_dcode = d.dcode
			where anocode= 1 and apaper =0
				 <if test=' searchCategory == "" and searchWord != "" '>
			         and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			     </if>
			      <if test=' searchCategory != ""    and searchWord == "" '>
			     	 	and ncat= #{searchCategory}
			     </if>
			     <if test=' searchCategory != ""   and searchWord != "" '>
				     	 and ncat= #{searchCategory}
				         and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				  </if>
				 ) V
		      	where rno between #{startRno} and #{endRno}
		</select>
		
		
		<!-- // 하나의 일반결재내역 문서 보여주기 -->
		<select id="generalOneView" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			  
			  select e.employeeid, ncatname, arecipient1, atitle, name ,dname, apaper ,a.ano , acontent ,to_char(asdate,'yyyy-mm-dd') as asdate, astatus, fileName ,orgFilename, fileSize 
			  <choose>
				<when test="ncatname eq'회의록'">
				 , mdate 
				</when>
				<when test="ncatname eq'위임장'">
				, fk_wiimdate 
				</when>
				<when test="ncatname eq'협조공문'">
				 ,nvl(comname,'없습니다.') as comname
				</when>
				
				</choose>
			 
			from tbl_approval a 
				<if test="ncatname eq'회의록'">
					left join tbl_minutes m 
					on m.fk_ano = a.ano
				</if>
				<if test="ncatname eq'위임장'">
					left join tbl_wiimjang w 
					on w.fk_ano = a.ano
				</if>
				<if test="ncatname eq'협조공문'">
					left join tbl_coofficial c 
					on c.fk_ano = a.ano
				</if>
			left join tbl_norapproval n
			on a.ano = n.fk_ano
			left join 
			(select employeeid ,name , fk_dcode
			from tbl_employee 
			)e
			on a.fk_employeeid = e.employeeid
			left join 
			(select dcode, dname
			from tbl_department
			)d
			on e.fk_dcode = d.dcode
			where anocode= 1 and ano=#{ano}
		</select>
		
		
		
		
		<!-- //하나의 일반결재내역에서 결재의견 목록 보여주기 -->
		<select id="oneOpinionList" parameterType="HashMap"  resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			select dname ,name, pname,to_char(odate,'yyyy-mm-dd')as odate,ocontent
			from tbl_aopinion a left join tbl_employee e
				 on a.fk_employeeid = e.employeeid
					left join tbl_department d
				 on e.fk_dcode = d.dcode
					left join tbl_position p
				 on e.fk_pcode=p.pcode
			where fk_ano =#{ano}
		
		</select>
		
		
	    
		
		<!-- //일반결재 글쓰기 -->
		<select id="WriteJsh" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			select dname ,d.dcode ,pname, e.managerid as managerid
			from tbl_employee e left join tbl_department d
			on d.dcode = e.fk_dcode
			left join tbl_position p
			on p.pcode = e.fk_pcode
			where employeeid = #{userid}
		</select>
		
		
		
		
		
		 <!--  1) insert될 문서번호를 알아온다 -->
		<select id="insertno" resultType="String">
			select seq_tbl_approval.nextval from dual
		</select>
		
		<!-- 2)전자결재테이블 insert -->
		<insert id="Electricadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate,apaper) 
			values (#{ano}, #{fk_employeeid}, '1' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,0)
		</insert>
		
		<!--  3) 일반결재테이블에 isnert -->
		<insert id="Generaladd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			
				insert  into tbl_norapproval (ncat,fk_ano,ncatname)  
				<if test="ncatname eq'회의록'">
					values('1',#{ano},'회의록')
				</if>
				<if test="ncatname eq'위임장'">
					 values('2',#{ano},'위임장')
				</if>
				<if test="ncatname eq'외부공문'">
					values('3',#{ano},'외부공문')
				</if>
				<if test="ncatname eq'협조공문'">
					values('4',#{ano},'협조공문')
				</if>
		</insert>
		
		<!-- 4) ncatname 조건에 따라 (회의록,위임장,외부공문,협조공문) 테이블에 insert 시켜줌  -->
		<insert id="selectadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			<if test="ncatname eq'회의록'">
				insert into tbl_minutes (mno , fk_ncat, fk_ano, mdate)         values(seq_tbl_minutes.nextval,'1',#{ano},#{mdate})
			</if>
			<if test="ncatname eq'위임장'">
				insert into tbl_wiimjang(wno , fk_ncat, fk_ano, fk_wiimdate)   values(seq_tbl_wiimjang.nextval,'2',#{ano},#{fk_wiimdate})
			</if>
			<if test="ncatname eq'외부공문'">
				insert into tbl_exofficial(eno, fk_ncat ,fk_ano)               values(seq_tbl_exofficial.nextval,'3',#{ano})
			</if>
			<if test="ncatname eq'협조공문'">
				insert into tbl_coofficial(cno, fk_ncat ,fk_ano, comname)       values(seq_tbl_coofficial.nextval,'4',#{ano},#{comname})
			</if>
		</insert>
		
		
		<!--글쓰기 ( 첨부파일이 있는 경우 ) = 전자결재테이블 insert -->
		<insert id="Electricadd_withFile" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate, apaper, fileName, orgFilename, fileSize) 
			values (#{ano}, #{fk_employeeid}, '1' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,0 , #{fileName}, #{orgFilename}, #{fileSize})
		</insert>
		
		<!--글쓰기 저장( 첨부파일이 없는 경우 ) = 전자결재테이블 insert -->
		<insert id="ElectricSave" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate, apaper) 
			values (#{ano}, #{fk_employeeid}, '1' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate, 2 )
		</insert>
		
		<!--글쓰기 저장( 첨부파일이 있는 경우 ) = 전자결재테이블 insert -->
		<insert id="ElectricSave_withFile" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate, apaper, fileName, orgFilename, fileSize) 
			values (#{ano}, #{fk_employeeid}, '1' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate, 2 , #{fileName}, #{orgFilename}, #{fileSize})
		</insert>
		
	
	
	
	
	<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  -->
	<!-- 지출결재 -->
	
		<!-- === 검색어 입력시 자동글 완성하기  === -->
	     <select id="expWordSearchShow" parameterType="HashMap" resultType="String">
				<choose>
					<when test="searchType eq 'name'"> <!-- if -->
			            select distinct ${searchType}
			        </when>
			         <otherwise>   <!-- else -->
	            		select ${searchType}
	         		</otherwise>
				</choose>
				from tbl_approval a left join 
					  	 (select employeeid ,name , fk_dcode
						  from tbl_employee 
						 )e
						 on a.fk_employeeid = e.employeeid
					     where anocode= 2 and apaper = 0
				 			   and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			    <if test="searchType neq 'name'">
			     order by  a.ano desc
			    </if>
		</select>


       <!-- === 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
		<select id="expGetTotalCount" parameterType="HashMap" resultType="int">
			select  count(*) 
			from tbl_approval  a left join tbl_employee e
			on a.fk_employeeid = e.employeeid
			left join tbl_spenda s
			on a.ano = s.fk_ano
			where anocode= '2' and apaper = 0
				<if test=' searchCategory == "" and searchType != "" and searchWord != "" '>
			         and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			     </if>
			      <if test=' searchCategory != ""  and searchType == ""   and searchWord == "" '>
			     	 	and scat= #{searchCategory}
			     </if>
			      <if test=' searchCategory != ""  and searchType != ""   and searchWord == "" '>
			     	 	and scat= #{searchCategory}
			     </if>
			     <if test=' searchCategory != ""  and searchType != ""    and searchWord != "" '>
				     	 and scat= #{searchCategory}
				         and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				  </if>
		</select>

		<!--  //페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한 것) -->
		<select id="expListSearchWithPaging" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			select rno ,ano ,scatname, atitle, name ,dname,to_char(asdate,'yyyy-mm-dd') as asdate , apaper ,employeeid
				  , fileName, orgFilename, fileSize   
			from
			(
			select row_number() over(order by a.ano desc) AS rno  
			      ,a.ano ,scatname, atitle, name ,dname,asdate ,apaper ,e.employeeid  
			       , fileName, orgFilename, fileSize 
			from tbl_approval a left join tbl_spenda s
			on a.ano = s.fk_ano
			left join 
			(select employeeid ,name , fk_dcode
			from tbl_employee 
			)e
			on a.fk_employeeid = e.employeeid
			left join 
			(select dcode, dname
			from tbl_department
			)d
			on e.fk_dcode = d.dcode
			where anocode= 2 and apaper = 0
				 <if test=' searchCategory == "" and searchWord != "" '>
			         and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			     </if>
			      <if test=' searchCategory != ""    and searchWord == "" '>
			     	 	and scat= #{searchCategory}
			     </if>
			     <if test=' searchCategory != ""   and searchWord != "" '>
				     	 and scat= #{searchCategory}
				         and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				  </if>
				 ) V
		      	where rno between #{startRno} and #{endRno}
		</select>
			
		
		
		<!-- // 하나의 전자결재내역 문서 보여주기 -->
		<select id="expOneView" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			  
			  select e.employeeid ,scatname, scat, arecipient1, atitle, name ,dname, apaper ,a.ano as ano, acontent ,to_char(asdate,'yyyy-mm-dd') as asdate, astatus, fileName ,orgFilename, fileSize 
			  <choose>
				<when test="scatname eq'지출결의서'">
				 , to_char(exdate,'yyyy-mm-dd'),  exprice
				</when>
				<when test="scatname eq'법인카드사용신청서'">
				, to_char(codate,'yyyy-mm-dd') ,cocardnum ,copurpose,coprice
				</when>
				</choose>
			 
			from tbl_approval a 
				<if test="scatname eq'지출결의서'">
					left join tbl_expense ex 
					on ex.fk_ano = a.ano
				</if>
				<if test="scatname eq'법인카드사용신청서'">
					left join tbl_cocard c 
					on c.fk_ano = a.ano
				</if>
				
			left join tbl_spenda s
			on a.ano = s.fk_ano
			left join 
			(select employeeid ,name , fk_dcode
			from tbl_employee 
			)e
			on a.fk_employeeid = e.employeeid
			left join 
			(select dcode, dname
			from tbl_department
			)d
			on e.fk_dcode = d.dcode
			where anocode= 2 and ano=#{ano}
		</select>
		
		
		
		
		<!-- 2)전자결재테이블 insert -->
		<insert id="ElectricExpadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate,apaper) 
			values (#{ano}, #{fk_employeeid}, '2' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,0)
		</insert>
		
		<!--  3) 지출결재테이블에 isnert -->
		<insert id="expAdd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			
				insert into tbl_spenda (scat,fk_ano,scatname)  
				<if test="scatname eq'지출결의서'">
					values('1',#{ano},'지출결의서')
				</if>
				<if test="scatname eq'법인카드사용신청서'">
					 values('2',#{ano},'법인카드사용신청서')
				</if>
				
		</insert>
		
		<!-- 4) scatname 조건에 따라 (지출결의서, 법인카드사용신청서) 테이블에 insert 시켜줌  -->
		<insert id="selectExpadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			<if test="scatname eq'지출결의서'">
				insert into tbl_expense (exno , fk_scat, fk_ano, exdate , exprice)         values(seq_tbl_expense.nextval,'1',#{ano},#{exdate},#{exprice})
			</if>
			<if test="scatname eq'법인카드사용신청서'">
				insert into tbl_cocard(cono , fk_scat, fk_ano, codate, cocardnum ,copurpose ,coprice)   values(seq_tbl_cocard.nextval,'2',#{ano},#{codate} ,#{cocardnum}, #{copurpose} ,#{coprice})
			</if>
			
		</insert>
		
		<!--  파일첨부가 있는 전자결재 문서 글쓰기 insert -->
		<insert id="ElectricExpadd_withFile" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate,apaper ,fileName, orgFilename, fileSize) 
			values (#{ano}, #{fk_employeeid}, '2' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,0 , #{fileName}, #{orgFilename}, #{fileSize})
		</insert>
		
		
		<!--  파일첨부가 없는 전자결재 문서 임시보관함  insert -->
		<insert id="saveExpadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate,apaper ) 
			values (#{ano}, #{fk_employeeid}, '2' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,2 )
		</insert>
		
		<!--  파일첨부가 있는 전자결재 문서 임시보관함 insert -->
		<insert id="saveExpadd_withFile" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano,fk_employeeid,anocode,arecipient1, atitle ,astatus , acontent ,asdate,apaper ,fileName, orgFilename, fileSize) 
			values (#{ano}, #{fk_employeeid}, '2' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,2 , #{fileName}, #{orgFilename}, #{fileSize})
		</insert>
		
		
		
		
		<!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  -->
	<!-- 근태결재 -->
	
		<!-- === 검색어 입력시 자동글 완성하기  === -->
	     <select id="vacWordSearchShow" parameterType="HashMap" resultType="String">
				<choose>
					<when test="searchType eq 'name'"> <!-- if -->
			            select distinct ${searchType}
			        </when>
			         <otherwise>   <!-- else -->
	            		select ${searchType}
	         		</otherwise>
				</choose>
				from tbl_approval a left join 
					  	 (select employeeid ,name , fk_dcode
						  from tbl_employee 
						 )e
						 on a.fk_employeeid = e.employeeid
					     where anocode= 3 and apaper =0
				 			   and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			    <if test="searchType neq 'name'">
			     order by  a.ano desc
			    </if>
		</select>


       <!-- === 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
		<select id="vacGetTotalCount" parameterType="HashMap" resultType="int">
			select  count(*) 
			from tbl_approval  a left join tbl_employee e
			on a.fk_employeeid = e.employeeid
			left join tbl_vacation v
			on a.ano = v.fk_ano
			where anocode= '3' and apaper = 0
				<if test=' searchCategory == "" and searchType != "" and searchWord != "" '>
			         and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			     </if>
			      <if test=' searchCategory != ""  and searchType == ""   and searchWord == "" '>
			     	 	and vcatname= #{searchCategory}
			     </if>
			      <if test=' searchCategory != ""  and searchType != ""   and searchWord == "" '>
			     	 	and vcatname= #{searchCategory}
			     </if>
			     <if test=' searchCategory != ""  and searchType != ""    and searchWord != "" '>
				     	 and vcatname= #{searchCategory}
				         and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				  </if>
		</select>

		<!--  //페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한 것) -->
		<select id="vacListSearchWithPaging" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
			select rno ,ano ,vno,vcatname, atitle, name ,dname,to_char(asdate,'yyyy-mm-dd') as asdate ,apaper ,employeeid 
				  , fileName, orgFilename, fileSize   
			from
			(
			select row_number() over(order by a.ano desc) AS rno  
			      ,a.ano ,vno ,vcatname, atitle, name ,dname,asdate ,apaper ,e.employeeid   
			       , fileName, orgFilename, fileSize 
			from tbl_approval a left join tbl_vacation v
			on a.ano = v.fk_ano
			left join 
			(select employeeid ,name , fk_dcode
			from tbl_employee 
			)e
			on a.fk_employeeid = e.employeeid
			left join 
			(select dcode, dname
			from tbl_department
			)d
			on e.fk_dcode = d.dcode
			where anocode= 3 and apaper = 0 
				 <if test=' searchCategory == "" and searchWord != "" '>
			         and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'
			     </if>
			      <if test=' searchCategory != ""    and searchWord == "" '>
			     	 	and vcatname= #{searchCategory}
			     </if>
			     <if test=' searchCategory != ""   and searchWord != "" '>
				     	 and vcatname= #{searchCategory}
				         and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
				  </if>
				 ) V
		      	where rno between #{startRno} and #{endRno}
		</select>
		
		
		<!-- 제출하기 -->
		
		<!-- 2)첨부파일이 없는 근태결재테이블 insert -->
		<insert id="ElectricVacadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_approval (ano, fk_employeeid, anocode, arecipient1, atitle , astatus , acontent ,asdate, apaper) 
			values (#{ano}, #{fk_employeeid}, '3' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate, 0)
		</insert>
		
		<!--  3) 근태결재테이블에 isnert -->
		<insert id="vacAdd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			
			insert into tbl_vacation (vno , fk_ano, vcatname)
			<if test="vcatname eq'병가'">
				values(1,#{ano} ,'병가')
			</if>
			<if test="vcatname eq'반차'">
				values(2,#{ano} ,'반차')
			</if>
			<if test="vcatname eq'연차'">
				values(3,#{ano} ,'연차')
			</if>
			<if test="vcatname eq'경조휴가'">
				values(4,#{ano} ,'경조휴가')
			</if>
			<if test="vcatname eq'출장'">
				values(5,#{ano} ,'출장')
			</if>
			<if test="vcatname eq'추가근무'">
				values(6,#{ano} ,'추가근무')
			</if>
				
		</insert>
		
		<!-- 4) vcatname 조건에 따라 (병가,반차,연차,경조휴가,출장,추가근무) 테이블에 insert 시켜줌  -->
		<insert id="selectVacadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
		    <if test="vcatname eq'병가'">
				insert into tbl_sickleave (slno, fk_vno, fk_ano, slstart, slend, sldates)
				values ( seq_tbl_sickleave.nextval, 1, #{ano}, #{slstart}, #{slend},
					   (select  (to_date(#{slend},'yyyy-mm-dd') - to_date(#{slstart},'yyyy-mm-dd')+1) as sldates from dual) )
			</if>
			<if test="vcatname eq'반차'">
				insert into tbl_afternoonoff (afno, fk_vno, fk_ano, afdate, afdan, afdates)
				values (seq_tbl_afternoonoff.nextval, 2, #{ano}, #{afdate}, #{afdan}, default)
			</if>
			<if test="vcatname eq'연차'">
				insert into tbl_dayoff (dayno,fk_vno,fk_ano,daystart, dayend, daydates)
				values (seq_tbl_dayoff.nextval, 3, #{ano}, #{daystart}, #{dayend} , 
				(select (to_date(#{dayend},'yyyy-mm-dd') - to_date(#{daystart},'yyyy-mm-dd')+1) as daydates from dual))
			</if>
			<if test="vcatname eq'경조휴가'">
				insert into tbl_congoff (congno, fk_vno, fk_ano, congstart, congend, congdates)
				values (seq_tbl_congoff.nextval, 4, #{ano}, #{congstart} , #{congend}, 
				(select (to_date(#{congend},'yyyy-mm-dd') - to_date(#{congstart},'yyyy-mm-dd')+1) as congdates from dual))
			</if>
			<if test="vcatname eq'출장'">
				insert into tbl_businesstrip (buno, fk_vno, fk_ano, bustart, buend, budates , buplace , bupeople)
				values (seq_tbl_businesstrip.nextval, 5 , #{ano}, #{bustart}, #{buend}, 
				(select (to_date(#{buend},'yyyy-mm-dd') - to_date(#{bustart},'yyyy-mm-dd')+1) as congdates from dual) ,
				#{buplace} , #{bupeople})
			</if>
			<if test="vcatname eq'추가근무'">
				insert into tbl_extrawork (ewno, fk_vno, fk_ano, ewdate, ewhours)
				values (seq_tbl_extrawork.nextval,6, #{ano}, #{ewdate}, #{ewhours})
			</if>
		</insert>
		
	 
		
		<!-- 6) 결재로그에 insert -->
		<insert id="logInsert" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
			insert into tbl_alog (logno, fk_ano, fk_employeeid , logstatus , logdate)
			values (seq_tbl_alog.nextval, #{ano}, #{fk_employeeid} , default, default)
		</insert>
		
		
		
	<!-- =================================================================================================================================================  -->
	
	<!--  파일첨부가 있는 근태결재 문서 글쓰기 insert -->
	<insert id="ElectricVacadd_withFile" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
		insert into tbl_approval (ano, fk_employeeid, anocode, arecipient1, atitle ,astatus , acontent ,asdate,apaper ,fileName, orgFilename, fileSize) 
		values (#{ano}, #{fk_employeeid}, '3' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate, 0 , #{fileName}, #{orgFilename}, #{fileSize})
	</insert>
	
	
	<!--  파일첨부가 없는 근태 결재 테이블 > 근태결재 문서 임시보관함  insert (전자결재) -->
	<insert id="saveVacadd" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
		insert into tbl_approval (ano,fk_employeeid, anocode,arecipient1, atitle ,astatus , acontent ,asdate,apaper ) 
		values (#{ano}, #{fk_employeeid}, '3' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,2 )
	</insert>
	
	<!--  파일첨부가 있는 근태결재 문서 임시보관함 insert -->
	<insert id="saveVacadd_withFile" parameterType="com.t1works.groupware.jsh.model.ElectronPayJshVO"  >
		insert into tbl_approval (ano,fk_employeeid, anocode, arecipient1, atitle , astatus , acontent ,asdate, apaper ,fileName, orgFilename, fileSize) 
		values (#{ano}, #{fk_employeeid}, '3' , #{arecipient1}, #{atitle} ,0 , #{acontent} ,sysdate,2 , #{fileName}, #{orgFilename}, #{fileSize})
	</insert>
	
	
	<!-- 하나의 근태결재내역 문서 보여주기 -->
	<select id="vacOneView" parameterType="HashMap" resultType="com.t1works.groupware.jsh.model.ElectronPayJshVO">
		  
		  select e.employeeid ,vcatname, vno, arecipient1, atitle, name ,dname, pname , apaper ,a.ano as ano, acontent ,to_char(asdate,'yyyy-mm-dd') as asdate, astatus, fileName ,orgFilename, fileSize 
		  <choose>
			<when test="vcatname eq'병가'">
			 , to_char(slstart,'yyyy-mm-dd') as slstart,  to_char(slend,'yyyy-mm-dd') as slend , sldates
			</when>
			<when test="vcatname eq'반차'">
			, to_char(afdate,'yyyy-mm-dd') as afdate ,afdan ,afdates
			</when>
			<when test="vcatname eq'연차'">
			 , to_char(daystart,'yyyy-mm-dd') as daystart,   to_char(dayend,'yyyy-mm-dd') as dayend, daydates
			</when>
			<when test="vcatname eq'경조휴가'">
			,  to_char(congstart,'yyyy-mm-dd') as congstart , to_char(congend,'yyyy-mm-dd') as congend ,congdates
			</when>
			<when test="vcatname eq'출장'">
			 , to_char(bustart,'yyyy-mm-dd') as bustart,  to_char(buend,'yyyy-mm-dd') as buend, budates, buplace, bupeople
			</when>
			<when test="vcatname eq'추가근무'">
			, to_char(ewdate,'yyyy-mm-dd') as ewdate ,ewhours 
			</when>
			</choose>
		from tbl_approval a 
			<if test="vcatname eq'병가'">
				left join tbl_sickleave s 
				on s.fk_ano = a.ano
			</if>
			<if test="vcatname eq'반차'">
				left join tbl_afternoonoff af 
				on af.fk_ano = a.ano
			</if>
			<if test="vcatname eq'연차'">
				left join tbl_dayoff do 
				on do.fk_ano = a.ano
			</if>
			<if test="vcatname eq'경조휴가'">
				left join tbl_congoff c 
				on c.fk_ano = a.ano
			</if>
			<if test="vcatname eq'출장'">
				left join tbl_businesstrip b 
				on b.fk_ano = a.ano
			</if>
			<if test="vcatname eq'추가근무'">
				left join tbl_extrawork ex 
				on ex.fk_ano = a.ano
			</if>
		left join tbl_vacation v
		on  v.fk_ano= a.ano
		left join 
		(select employeeid ,name , fk_dcode , fk_pcode
		from tbl_employee 
		)e
		on a.fk_employeeid = e.employeeid
		left join 
		(select pcode, pname
		from tbl_position 
		)p
		on e.fk_pcode = p.pcode
		left join
		(select dcode, dname
		from tbl_department
		)d
		on e.fk_dcode = d.dcode
		
		where anocode= 3 and ano=#{ano}
	</select>
		
		
		
		
</mapper>




